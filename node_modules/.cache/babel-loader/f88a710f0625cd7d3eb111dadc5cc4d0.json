{"ast":null,"code":"import _slicedToArray from \"/Users/josh/Projects/symbiome/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/josh/Projects/symbiome/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/josh/Projects/symbiome/src/components/Introduction/Introduction.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from 'react';\nimport { Carousel, CarouselItem, Row, Col } from 'reactstrap';\nimport SectionLink from '../SectionLink';\nimport yellow1 from 'assets/img/yellow1.png';\nimport firstBackground from 'assets/img/bg.png'; // Slide duration and each slides content\n\nvar SLIDE_DURATION = 5000;\nvar SLIDES = [{\n  key: 1,\n  background: firstBackground,\n  content: React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"introduction__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"We are dedicated to finding the ancestral health we have lost, starting with your skin\"), React.createElement(SectionLink, {\n    className: \"introduction__sectionlink\",\n    text: \"Start your Journey\",\n    image: yellow1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }))\n}, {\n  key: 2,\n  background: firstBackground,\n  content: React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"introduction__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Symbiome offers up to 6 months of free & bespoke skincare with FDA-grade clinical trials\"), React.createElement(SectionLink, {\n    className: \"introduction__sectionlink\",\n    text: \"Start your Journey\",\n    image: yellow1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))\n}, {\n  key: 3,\n  background: firstBackground,\n  content: React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n    className: \"introduction__title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.\"), React.createElement(SectionLink, {\n    className: \"introduction__sectionlink\",\n    text: \"Start your Journey\",\n    image: yellow1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }))\n}]; // Carousel progress bar of the active slide\n\nvar Indicator = function Indicator(_ref) {\n  var onClick = _ref.onClick,\n      isActive = _ref.isActive;\n  return React.createElement(\"button\", {\n    type: \"button\",\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: _objectSpread({}, isActive ? {\n      animationDuration: \"\".concat(SLIDE_DURATION / 1000, \"s\")\n    } : {\n      animation: 'none'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n};\n\nvar Introduction = React.memo(function () {\n  // Carousel state\n  var _useReducer = useReducer(function (state, action) {\n    switch (action.type) {\n      case 'NEXT':\n        return {\n          currentIndex: (state.currentIndex + 1) % SLIDES.length\n        };\n\n      case 'PREVIOUS':\n        return {\n          currentIndex: (state.currentIndex - 1 + SLIDES.length) % SLIDES.length\n        };\n\n      case 'GOTO':\n        return {\n          currentIndex: action.index\n        };\n\n      default:\n        return state;\n    }\n  }, {\n    currentIndex: 0\n  }),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      dispatch = _useReducer2[1];\n\n  function handleIndicatorClick(index) {\n    // Ignore if this is already the active slide\n    if (index === state.currentIndex) {\n      return;\n    }\n\n    dispatch({\n      type: 'GOTO',\n      index: index\n    });\n  }\n\n  return React.createElement(Row, {\n    className: \"introduction\",\n    style: {\n      backgroundImage: \"url(\".concat(SLIDES[state.currentIndex].background, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(Col, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Carousel, {\n    activeIndex: state.currentIndex,\n    next: function next() {\n      return dispatch({\n        type: 'NEXT'\n      });\n    },\n    previous: function previous() {\n      return dispatch({\n        type: 'PREVIOUS'\n      });\n    },\n    keyboard: false,\n    pause: false,\n    ride: \"carousel\",\n    interval: SLIDE_DURATION,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, SLIDES.map(function (slide) {\n    return React.createElement(CarouselItem, {\n      key: slide.key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, slide.content);\n  }))), React.createElement(\"div\", {\n    class: \"introduction__indicators\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, SLIDES.map(function (slide, index) {\n    return React.createElement(Indicator, {\n      key: slide.key,\n      slide: slide,\n      isActive: index === state.currentIndex,\n      onClick: function onClick() {\n        return handleIndicatorClick(index);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    });\n  })));\n});\nexport default Introduction;","map":{"version":3,"sources":["/Users/josh/Projects/symbiome/src/components/Introduction/Introduction.js"],"names":["React","useReducer","Carousel","CarouselItem","Row","Col","SectionLink","yellow1","firstBackground","SLIDE_DURATION","SLIDES","key","background","content","Indicator","onClick","isActive","animationDuration","animation","Introduction","memo","state","action","type","currentIndex","length","index","dispatch","handleIndicatorClick","backgroundImage","map","slide"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react'\nimport {Carousel, CarouselItem, Row, Col} from 'reactstrap'\nimport SectionLink from '../SectionLink'\n\nimport yellow1 from 'assets/img/yellow1.png'\nimport firstBackground from 'assets/img/bg.png'\n\n// Slide duration and each slides content\nconst SLIDE_DURATION = 5000;\nconst SLIDES = [\n    {\n        key: 1,\n        background: firstBackground,\n        content: <>\n            <h1 className=\"introduction__title\">We are dedicated to finding the ancestral health we have lost, starting with your skin</h1>\n            <SectionLink className=\"introduction__sectionlink\" text=\"Start your Journey\" image={yellow1} />\n        </>,\n    },\n    {\n        key: 2,\n        background: firstBackground,\n        content: <>\n            <h1 className=\"introduction__title\">Symbiome offers up to 6 months of free & bespoke skincare with FDA-grade clinical trials</h1>\n            <SectionLink className=\"introduction__sectionlink\" text=\"Start your Journey\" image={yellow1} />\n        </>\n    },\n    {\n        key: 3,\n        background: firstBackground,\n        content: <>\n            <h1 className=\"introduction__title\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</h1>\n            <SectionLink className=\"introduction__sectionlink\" text=\"Start your Journey\" image={yellow1} />\n        </>,\n    }\n]\n\n// Carousel progress bar of the active slide\nconst Indicator = ({onClick, isActive}) => {\n    return (\n        <button\n            type=\"button\"\n            onClick={onClick}\n        >\n            <div\n                style={{\n                    ...(isActive ? {animationDuration: `${SLIDE_DURATION/1000}s`} : {animation: 'none'})\n                }}\n            />\n        </button>\n    )\n}\n\nconst Introduction = React.memo(() => {\n    // Carousel state\n    const [state, dispatch] = useReducer((state, action) => {\n        switch (action.type) {\n            case 'NEXT':\n                return { currentIndex: (state.currentIndex + 1) % SLIDES.length }\n            case 'PREVIOUS':\n                return { currentIndex: (state.currentIndex - 1 + SLIDES.length) % SLIDES.length }\n            case 'GOTO':\n                return { currentIndex: action.index }\n            default:\n                return state\n      }\n    }, { currentIndex: 0 })\n\n    function handleIndicatorClick(index) {\n        // Ignore if this is already the active slide\n        if (index === state.currentIndex) {\n            return\n        }\n        dispatch({ type: 'GOTO', index })\n    }\n\n    return (\n        <Row className=\"introduction\" style={{backgroundImage: `url(${SLIDES[state.currentIndex].background})`}}>\n            <Col>\n                <Carousel\n                    activeIndex={state.currentIndex}\n                    next={() => dispatch({ type: 'NEXT' })}\n                    previous={() => dispatch({ type: 'PREVIOUS' })}\n                    keyboard={false}\n                    pause={false}\n                    ride=\"carousel\"\n                    interval={SLIDE_DURATION}\n                >\n                    {/* Slides */}\n                    {SLIDES.map(slide => (\n                        <CarouselItem key={slide.key}>\n                            {slide.content}\n                        </CarouselItem>\n                    ))}\n                </Carousel>\n            </Col>\n            {/* Use custom indicators to support progress animation */}\n            <div class=\"introduction__indicators\">\n                {SLIDES.map((slide, index) => (\n                    <Indicator\n                        key={slide.key}\n                        slide={slide}\n                        isActive={index === state.currentIndex}\n                        onClick={() => handleIndicatorClick(index)}\n                    />\n                ))}\n            </div>\n        </Row>\n    )\n})\n\nexport default Introduction\n"]},"metadata":{},"sourceType":"module"}