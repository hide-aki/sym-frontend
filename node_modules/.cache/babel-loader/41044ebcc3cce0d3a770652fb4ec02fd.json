{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = require(\"/Users/josh/Projects/symbiome/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _require = require('react'),\n    useState = _require.useState,\n    useEffect = _require.useEffect;\n\nvar _throttle = require('lodash.throttle');\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar getPosition = function getPosition() {\n  return {\n    x: window.pageXOffset,\n    y: window.pageYOffset\n  };\n};\n\nvar defaultOptions = {\n  throttle: 100\n};\n\nfunction useWindowScrollPosition(options) {\n  var opts = Object.assign({}, defaultOptions, options);\n\n  var _useState = useState(getPosition()),\n      _useState2 = _slicedToArray(_useState, 2),\n      position = _useState2[0],\n      setPosition = _useState2[1];\n\n  useEffect(function () {\n    var handleScroll = _throttle(function () {\n      setPosition(getPosition());\n    }, opts.throttle);\n\n    window.addEventListener('scroll', handleScroll, supportsPassive ? {\n      passive: true\n    } : false);\n    return function () {\n      handleScroll.cancel();\n      window.removeEventListener('scroll', handleScroll);\n    };\n  }, []);\n  return position;\n}\n\nmodule.exports = useWindowScrollPosition;","map":null,"metadata":{},"sourceType":"script"}